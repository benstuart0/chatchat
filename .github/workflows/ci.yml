name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      VERCEL: 1
      NEXT_TELEMETRY_DISABLED: 1

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: |
          package-lock.json
          client/package-lock.json

    - name: Install root dependencies
      run: npm ci
      
    - name: Install client dependencies
      working-directory: ./client
      run: npm ci

    - name: Run client lint
      working-directory: ./client
      run: npm run lint

    - name: Verify module resolution
      working-directory: ./client
      run: |
        # Check if tsconfig.json exists and has proper path mappings
        if [ -f "tsconfig.json" ]; then
          echo "Verifying tsconfig.json path mappings..."
          cat tsconfig.json | grep -A 5 "paths"
        else
          echo "tsconfig.json not found!"
          exit 1
        fi
        
        # Check for any @ imports that might cause issues
        echo "Checking for potentially problematic imports..."
        find src -type f -name "*.ts*" -exec grep -l "@/" {} \;
        
        # This will help catch module resolution issues before they hit Vercel

    - name: Verify production build
      working-directory: ./client
      run: |
        npm run build
        # Verify that the build output contains the expected files
        test -d .next || { echo "Build output directory .next not found"; exit 1; }
        test -f .next/BUILD_ID || { echo "BUILD_ID not found in output"; exit 1; }

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        cache: 'pip'
        cache-dependency-path: 'server/requirements.txt'

    - name: Install Python dependencies
      working-directory: ./server
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Ruff checks
      working-directory: ./server
      run: python -m ruff check .

    - name: Test server startup
      working-directory: ./server
      run: |
        timeout 5 uvicorn main:app || code=$?; if [ $code -eq 124 ]; then exit 0; else exit $code; fi 